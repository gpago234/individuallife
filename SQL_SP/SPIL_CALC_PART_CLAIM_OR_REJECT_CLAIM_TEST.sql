USE [ABS_LIFE]
GO


ALTER PROCEDURE SPIL_CALC_PART_CLAIM_OR_REJECT_CLAIM_TEST
	@pPOLICY_NUMBER NVARCHAR(35), @pCLAIM_NUMBER NVARCHAR(35), @pPRODUCT_CODE NVARCHAR(20), @pPARTIAL_PAYMENT INT, @pPOLICY_START_DATE DATETIME,  @pPOLICY_END_DATE DATETIME

	
AS
BEGIN
SET NOCOUNT ON;
DECLARE @PAY_MULITIPLE NCHAR(3), @vINSURE_PERIOD INT, @vRECORD_COUNT INT, @vCALC_PARTIAL_CLAIM NUMERIC(18, 2)
SELECT @PAY_MULITIPLE=(SELECT TBIL_PRDCT_SA_PAY_MULITIPLE FROM TBIL_PRODUCT_DETL WHERE TBIL_PRDCT_DTL_CODE = @pPRODUCT_CODE)
IF @PAY_MULITIPLE='Y'
	BEGIN
		SELECT @vINSURE_PERIOD = DATEDIFF(DD, @pPOLICY_START_DATE, '2017-01-01')
		--SELECT @vINSURE_PERIOD = DATEDIFF(DD, @pPOLICY_START_DATE, GETDATE())
		SELECT @vINSURE_PERIOD AS 'INS_TO_PRES_DATE', (1*((DATEDIFF(DD, @pPOLICY_START_DATE, @pPOLICY_END_DATE)/3))) AS '1-3RD', ((2*(DATEDIFF(DD, @pPOLICY_START_DATE, @pPOLICY_END_DATE))/3)) AS '2-3RD'
		
		SELECT @vRECORD_COUNT = (SELECT COUNT(@pCLAIM_NUMBER) FROM TBIL_CLAIM_PAID WHERE TBIL_CLM_PAID_POLY_NO = @pPOLICY_NUMBER)	
		IF @vRECORD_COUNT = 1
		BEGIN
			IF ((@vINSURE_PERIOD > (1*((DATEDIFF(DD, @pPOLICY_START_DATE, @pPOLICY_END_DATE)/3))) AND (@vINSURE_PERIOD < ((2*(DATEDIFF(DD, @pPOLICY_START_DATE, @pPOLICY_END_DATE))/3)))))
			BEGIN
					SELECT @vINSURE_PERIOD AS 'INS_PERIOD', 'WITHING RANGE 1ST' AS 'RANGE'
			--		SELECT @vRECORD_COUNT AS 'RECORD_COUNT_1'
			--		IF @vRECORD_COUNT = 1
			--			BEGIN
						--DECLARE @vCALC_PARTIAL_CLAIM NUMERIC(18, 2)
						SELECT @vCALC_PARTIAL_CLAIM = (SELECT ((TBIL_POL_PRM_SA_LC * 25)/100) FROM TBIL_CLAIM_PAID INNER JOIN TBIL_POLICY_PREM_INFO ON TBIL_POL_PRM_PROP_NO = TBIL_CLM_PAID_POLY_NO WHERE (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO = @pPOLICY_NUMBER))

						UPDATE TBIL_CLAIM_PAID SET TBIL_CLM_PAID_SA_AMT_LC = @vCALC_PARTIAL_CLAIM WHERE (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO = @pPOLICY_NUMBER)

						SELECT TBIL_POL_PRM_SA_LC, TBIL_CLAIM_PAID.*, TBIL_POL_PRM_SA_LC FROM TBIL_CLAIM_PAID INNER JOIN TBIL_POLICY_PREM_INFO ON TBIL_POL_PRM_PROP_NO =TBIL_CLM_PAID_POLY_NO WHERE (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO=@pPOLICY_NUMBER)

			--			END				
			END
		
		END

		ELSE IF @vRECORD_COUNT = 2
		BEGIN
		IF ((@vINSURE_PERIOD > ((2*(DATEDIFF(DD, @pPOLICY_START_DATE, @pPOLICY_END_DATE))/3)))) AND (@vINSURE_PERIOD < ((DATEDIFF(DD, @pPOLICY_START_DATE, @pPOLICY_END_DATE))))
			BEGIN
					SELECT @vINSURE_PERIOD AS 'INS_PERIOD', 'WITHING RANGE 2ND' AS 'RANGE'
					--SELECT @vRECORD_COUNT = (SELECT COUNT(@pCLAIM_NUMBER) FROM TBIL_CLAIM_PAID WHERE (TBIL_CLM_PAID_POLY_NO = @pPOLICY_NUMBER) AND (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER))
					--SELECT @vRECORD_COUNT AS 'RECORD_COUNT_2'
					--IF @vRECORD_COUNT = 2
					--	BEGIN					
						DECLARE @vMAXDATE DATETIME
						SELECT @vMAXDATE=(SELECT MAX(TBIL_CLM_PAID_AMT_KEYDTE) FROM TBIL_CLAIM_PAID  WHERE  (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO=@pPOLICY_NUMBER))
						SELECT @vMAXDATE AS 'vMAXDATE'				
												
						SELECT @vCALC_PARTIAL_CLAIM = (SELECT ((TBIL_POL_PRM_SA_LC * 25)/100) FROM TBIL_CLAIM_PAID INNER JOIN TBIL_POLICY_PREM_INFO ON TBIL_POL_PRM_PROP_NO = TBIL_CLM_PAID_POLY_NO WHERE (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO = @pPOLICY_NUMBER) AND (TBIL_CLM_PAID_AMT_KEYDTE = @vMAXDATE)) 

						UPDATE TBIL_CLAIM_PAID SET TBIL_CLM_PAID_SA_AMT_LC = @vCALC_PARTIAL_CLAIM WHERE (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO = @pPOLICY_NUMBER) AND (TBIL_CLM_PAID_AMT_KEYDTE = @vMAXDATE)
							
									
						SELECT TBIL_POL_PRM_SA_LC, TBIL_CLAIM_PAID.*, TBIL_POL_PRM_SA_LC FROM TBIL_CLAIM_PAID INNER JOIN TBIL_POLICY_PREM_INFO ON TBIL_POL_PRM_PROP_NO =TBIL_CLM_PAID_POLY_NO WHERE (TBIL_CLM_PAID_CLM_NO = @pCLAIM_NUMBER) AND (TBIL_CLM_PAID_POLY_NO=@pPOLICY_NUMBER)  AND (TBIL_CLM_PAID_AMT_KEYDTE = @vMAXDATE)

						--END
				END

		END	
		

						
		--ELSE
		--	BEGIN
		--		SELECT INSURE_STATUS = 'STATUS DOES NOT COVER'
		--	END
		END
ELSE
		BEGIN
		SELECT CLAIM_STATUS='CLAIM CALC. REJECTED'
		END
END